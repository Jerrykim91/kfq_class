/*
딕스럭처링: 배열구조분해, 객체구조분해등을 통해서
           맴버들을 편하게 변수로 받을수 있게 하는 문법
+ 스프레드연산
=> 편의성때문에 등장한 문법
*/
let station = {
    s1:'모라역',
    s2:'사상역',
    s3:'서면역',
    s4:['센텀역','해운대역','부산역'],
}
// 사상역, 부산역을 
// 출력하시오
console.log( station.s2, station.s4[2] )
// 간단하게 s1, s5등등 이런식으로간단하게 접근하면 않되는가? => 표준에서 지원
// 객체구조분해, 배열구조분해 추가가 되었다 -> 간결하게 표현하자
// 객체구조분해 -> 맴버 변수와 동일한 변수명을 왼족에 배치
// s2, s3는 맴버로 존재, s5는 맴버로 존재 않함
let {s2, s3, s5} = station
console.log( s2, s3, s5 )

// s2값을 변경하면 satation내에 s2가 영향을 받는가?
s2 = '품질'
console.log( s2, station.s2 ) // 영향 없음
// ------------------------------------------------------
// 배열 구조 분해 -> 개선점이 필요(굿이)
// 배열 => 순서가 존재한다, 인덱스가 있다, 값 하나 하나에 대한 이름이 따로 없다
// 이름은 마음대로, 단, 순서가 중요
let [ a1 ] = station.s4
console.log( a1 )
let [ , , a3 ] = station.s4
console.log( a3 )





