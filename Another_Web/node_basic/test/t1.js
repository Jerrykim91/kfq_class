const fs = require('fs')
// 콜백함수 연습
// 비동기 작업을 수행하는 함수를 사용해서 콜백 처리 구현
// 비동기 or 동기식 api 확인
// 1. 간단하게 파일을 생성 (1.txt)
// 2. 간단한 내용을 작성 (1234 or 대량의 내용 기술)
// 3. 파일 오픈
// 4. 파일 읽는다(동기, 비동기식)
// 5. 파일을 닫는다
// -------------------------------------------------
// 비동기 함수는 리턴값이 없다 <-> 동기 함수는 리턴값이 존재한다
// 결과를 돌려주는 콜백함수 1번인자는 에러, 2번인자는 값을 
// 세팅하는 것이 보편적
console.log('읽는다')
fs.readFile('./2.txt', (err, data)=>{
    // fs.readFile()이 내부적으로 하는일 --------------------------
    // 2.txt를 열고->읽고->데이터를 획득하면 혹은 에러가 나면
    // 2번 인자롤 넘겨준 콜백함수를 호출하고, 호출할때 파라미터 세팅
    // 1번인자에 에러를 , 2번인자 데이터를 넣는다
    // -----------------------------------------------------------
    console.log( err, data )
    // 나는 읽는다->데이터->읽었다 라는 순서대로 작업을 진행하고 싶다
    // 비동기 작업 이후는 콜백에서부터 이어가면 된다
    console.log('읽었다')
})
//console.log('읽었다')

// 파일이 n개가 존재한다. 차례대로 읽어서 출력=>나만의 비동기 처리함수구현
// ex) 1.txt 읽고 출력, 2.txt 읽고 출력, 3.txt 읽고 출력 

