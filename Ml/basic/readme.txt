1. 머신러닝
 a. 아서사무엘 - 명시적인 프로그래밍 없이 컴퓨터가 학습을 하는 능력을 갖추게 하는 연구 분야
 b. 톰미첼 - 어떤 작업 Task(T)에 대한 컴퓨터 프로그램의 성능을 Perperence(P)로 측정하였을때,
             경험 Experience(E)로 인해 성능이 향상되었다면, 이 컴퓨터 프로그램은 작업  T와 
             성능 측정 P에 대해 경험  E로 학습한 것이다
             ex) 스펨필터
              1) T: 새로운 메일이 스펨인지 아닌지 구분
              2) E: 훈련데이터( 시스템이 학습하는 샘플 )
              3) P: 직접 정의를 한다. 정확하게 스펨을 걸러내는 비율 => 정확도
2. 사용이유
 a. 전통적 접근법
 b. 머신러닝 접근법
3. 머신러닝 시스템 종류
 a. 학습하는 동안의 감독형태, 정보량, 정보형태
  - 지도학습
   1) 알고리즘에 주입하는 훈련 데이터에 레이블(label, 정답,  class)이 포함
   2) 분류 : 가장 전형적인 지도학습 방식
     -> 스팸 필터, 
   3) 회귀
     -> 중고차 가격 예측 (특성:feature(주행거리, 연식, 브랜드.., 속성)을 이용한 수치 예측
     -> 회귀 알고리즘에서 분류로 일부 병행 사용하는 방식
   4) 알고리즘
     -> k-최근접 이웃
     -> 선형 회귀
     -> 로지스틱 회귀
     -> 서포트 백터 머신
     -> 결정트리
     -> 랜덤포레스트
     -> 신경망 -> 딥러닝
     
  - 비지도학습
   1) 훈런 데이터에 레이블이 없다
   2) 시스템은 도움 없이 학습을 진행
   3) 알고리즘 
    a. 군집
     - k-평균
     - 계측군집분석:HCA
     - 기대값 최대화
    b. 시각화, 차원축소
     - 주성분 분석:PCA
     - 커널 PCA
     - t-SNE
    c. 연관 규칙학습
     - 어프라이어리
     - 아클렛
   4) 예시 
    a. 블로그 방문자 그룹화(예)
     -> 알고리즘 스스로가 방문자 사이의 연결고리를 찾는다
       1) 방문자의 50%는 남자고, 이들은 영화를 좋아한다(예시)
       2) 총 방문자의 25% 주말에만 들어오고, 이들은 SF를 좋아한다(예시)
       3) 이런 내용을 기준으로 군집화를 진행
       
    b. 시각화
     -> 대규모의 고차원 데이터를 삽입하여 도식화
     -> 2D/3D 로 표현 -> 이런 방식(알고리즘)은 구조를 유지할려는 경향을 띠게 된다.
     -> 이를 통해서 패턴을 추출
    c. 차원 축소
     -> 정보의 손실을 최소화 하면서 데이터를 간소화 하는 작업
     -> 상관 관계가 있는 여러 특성을 하나의 특성으로 합치는 과정
     -> 주행거리, 연식 데이터들을 차원축소 알고리즘을 통해 차의 마모라는 특성으로 합치는 과정
     -> 머신러닝 알고리즘의 데이터를 주입하기전, 차원 축소 알고리즘을 사용하면 => 훈련 데이터의
        차원을 줄이는 효과 -> 실행속도 상승 => 디스크/메모리상 점유를 줄여 주고=> 상황에 따라서
        는 정확도도 향상되는 효과를 가져온다 => 파이프라인 구축시 전처기리라는 이름으로 실제로 
        사용
     
    d. 이상치 탐지
     -> 부정 거래 탐지 -> 신용카드 거래
     -> 부정 대출 탐지 -> 2000~2003년 당시 유행, 최근에는 쉽지 않음
     -> 제조 결함 감지
     -> 학습 데이터에서 알고리즘에 주입하기 전, 데이터셋에서 이상치를 제거
     -> 새로운 샘플을 훈련을 시키기 전, 정상 데이터인지/이상치를 판단
    e. 연관 규칙 학습
     -> 대량의 데이터에서 특성간의 흥미로운 관계를 찾는 것
     -> 편의점/마트 -> 판매데이터(pos 데이터)를 보면 물품들간의 연관규칙을 찾을 수 있고, 
        이를 적용하여 -> 매데에 물건 배치를 (연관성을가지고)
   
  - 준지도학습 (semi~
   1) 레이블이 일부만 있는 데이터
   2) 통상적, 레이블이 없는 데이터가 주를 이루고, 레이블이 있는 데이터는 소수
   3) 예 
     a. 구글 포토 호스팅 서비스
      - 사진을 동기화 해서 업로드 사람 A, B가 있는데, A는 x지점에, B는 y지점에 있다.
      - 시스템은(구글) 이사람들이 누군인지를 알기 원한다. 
        일부 A라든지, B는 누구이다 라는 레이블을 가질수 있다 =>  사진을 올린 유저의 프사등을 
        통해서 일부 사진의 인물이 누구인지를 알고(소수), 대다수는 모르는 상황
     b. 준지도 = 비지도 + 지도학습의 조합 구성
      - 심층신뢰신경망(DBN)등이 예
   
  - 강화학습 (Reinforcement Learning)
   1) 에이전트 : 학습하는 시스템
   2) 환경을 관찰, 행동을 실행하고, 이에 따른 결과를 보상 (긍정적 보장:reward), 별점(부정적보상, 별점 : penalty)을 부여
   3) 이를 통해서 에이전트는 가장 큼 보상을 얻기 위한 최적의 정책(policy), 전략을 스스로 학습
   4) 해당 정책/전략이 주어진 상화에어 어떤 행동을 취해야 할것인지는 정의
   5) 예
     a. 딥마인드의 알파고
      -> 수백/수천만의 게임을 분석, 승리에 대한 전략 학습, 자기 자신과도 많은 게임을 수행
      -> 커제와 대전시, 학습 기능은 오프, 그간의 전략을 이용하여 대전을 치르고 전승
   
  
 b. 입력 데이터의 스트림(데이터의 흐름)으로부터 점진적 학습이 가능한가?
  - 배치학습(오프라인 학습)
    1) 새로운 데이터를 학습하기 위해서 
       전체데이터(이전 훈련 데이터 + 신규 데이터)를 사용하여 새로운 버전을 처음부터 다시 훈련
    2) 적용방법
       시스템 중단, 새 시스템으로 교체
    3) 주기
       통상 24시간, 매주 시스템을 훈련/교체하는 방식 취하나, 좀더 능동적인 방식 요구
    4) 시간이 지나면
       -> 데이터는 점점 커질것이다 => 학습 비용이 더 늘어날 것이다 => 언젠가는 
          배치학습으로는 알로리즘 학습 수행 행위가 불가능해 질수 있다
       -> 어느 정도 데이터가 많아지면 => 온라인 학습 방식 (전짐적 방식)으로 알고리즘 전환
    5) 자원이 제한된 시스템 ( 스마트폰, 탐사 로봇(우주:화성, 달..))
       -> 학습으로 인해서 리소스를 모두 투입하면 아무것도 할수 없다. 자원의 분배가 필요
       -> 성능 저하 원인이 될수 이다    
    6) 오프라인 학습 : 시스템을 훈련하고, 제품에 적용하는 방식, 시간와 자원을 많이 소모를 하기 
       때문에 오프라인에서 진행해야 합당
    
  - 온라인학습(세미배치 학습, 점진적 학습법: incremental learning)
    1) 데이터를 순차적으로 한개부터~ 미니 배치 단위(작음 묶음)으로 주입하여 시스템을 훈련
    2) 매단계가 빠르고, 비용도 적게 든다.
    3) 데이터가 도착하는대로 즉시 적용 => 적합한 시스템은 빠른 변화에 대응(주식, 등...)
    4) 자원이 한정적이므로, 학습이 끝나면 버린다 기준(롤백을 고려해서 텀을 두고 제거)
    5) 데이터는 외부 디스크에서 읽어서 메로리에 로드하고 학습하고 버리고
    6) 단점 : 나쁜 데이터가 주입되면, 시스템 성능이 저하된다.-> 이상탐지, 성능평가등을 이용하여
       제거를 해야 하고, 언제는지 롤백이(이전 버전으로 돌아가기가) 가능하게 구성
  
 c. 어떤 방식으로 일반화 되는가? - 새로운 샘플(접해보지 못한 데이터)이 작 작동하는 모델을 구축(목표)
  - 사례기반 학습
    -> 목표를 단순하게 기억하는 방식
    -> 스펨 메일 -> 스펨으로 분류되는 모든 메일을 기억 -> 동일한 메일을 분류
    -> 사례를 많이 기억하여 학습
  - 모델기반 학습
    -> 샘플들(데이터)의 모델을 만들어 예측에 사용
    -> 선형회귀: 1인당 GDP가 증가할수록 삶의 만족도가 좋아지는가?
       => 데이터의 추세를 모델을 통해서 설명
    
  
4. 머신러닝/딥러닝 서버





